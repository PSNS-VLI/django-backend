# Generated by Django 2.2 on 2023-02-04 18:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('cer_name', models.CharField(help_text='至多50字符', max_length=50, verbose_name='证书名称')),
                ('cer_recommend_num', models.BigIntegerField(help_text='初始化0人', verbose_name='打分人数')),
                ('cer_recommend_score', models.FloatField(help_text='初始化10分', verbose_name='推荐指数')),
                ('cer_popularity', models.CharField(blank=True, help_text='反应近年报考热门程度', max_length=50, null=True, verbose_name='热门程度')),
                ('cer_host_unit', models.CharField(max_length=50, verbose_name='主办(认证)单位')),
                ('cer_reach', models.CharField(max_length=10, verbose_name='作用范围')),
                ('cer_introduction', models.CharField(max_length=200, verbose_name='证书简介')),
                ('cer_tags', models.CharField(choices=[('通用类', '通用类'), ('工业工程', '工业工程'), ('会计学', '会计学'), ('经济学', '经济学'), ('信息管理与信息系统', '信息管理与信息系统')], default='通用类', max_length=50, verbose_name='证书分类标签')),
                ('cer_follow', models.CharField(blank=True, max_length=200, null=True, verbose_name='证书后续')),
                ('cer_manage', models.CharField(blank=True, max_length=200, null=True, verbose_name='证书管理')),
                ('apply_fee', models.FloatField(default=0.0, help_text='eg(99.0),加一位小数', verbose_name='报名费用')),
                ('apply_condition', models.CharField(max_length=200, verbose_name='报名条件')),
                ('apply_time', models.CharField(max_length=50, verbose_name='报名时间')),
                ('apply_way', models.CharField(max_length=200, verbose_name='报名方式')),
                ('apply_suggest', models.CharField(blank=True, max_length=200, null=True, verbose_name='报考建议')),
                ('exam_suggest', models.CharField(blank=True, max_length=200, null=True, verbose_name='参考建议')),
                ('exam_exempt', models.CharField(blank=True, max_length=200, null=True, verbose_name='免试申请与审核')),
                ('exam_pass_rate', models.FloatField(blank=True, null=True, verbose_name='通过率')),
                ('exam_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='考试类别')),
                ('exam_time', models.CharField(max_length=50, verbose_name='考试时间')),
                ('exam_frequency', models.CharField(max_length=200, verbose_name='考试频率')),
                ('exam_place', models.CharField(max_length=100, verbose_name='考试地点')),
                ('exam_subjects', models.CharField(help_text="'【】'表头,' / '分隔列,' ; '分隔行", max_length=200, verbose_name='考试科目以及时长')),
                ('exam_form', models.CharField(max_length=50, verbose_name='考试形式')),
                ('exam_question_type', models.CharField(max_length=1024, verbose_name='考试题型')),
                ('exam_info_check', models.CharField(blank=True, max_length=200, null=True, verbose_name='必备证件')),
                ('exam_epidemic_prevention', models.CharField(blank=True, max_length=100, null=True, verbose_name='防疫要求')),
                ('shortcut_info_collect', models.CharField(blank=True, max_length=50, null=True, verbose_name='信息采集')),
                ('shortcut_official_website', models.CharField(blank=True, max_length=50, null=True, verbose_name='报名官网')),
                ('shortcut_score_inquiry', models.CharField(blank=True, max_length=50, null=True, verbose_name='成绩查询网址')),
                ('recommend_app', models.CharField(blank=True, max_length=100, null=True, verbose_name='推荐软件')),
                ('recommend_website', models.CharField(blank=True, max_length=100, null=True, verbose_name='推荐网课')),
                ('recommend_post', models.CharField(blank=True, max_length=50, null=True, verbose_name='推荐职位')),
                ('scans', models.BigIntegerField(verbose_name='浏览数')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
                ('operator', models.CharField(choices=[('于宏亮', '于宏亮'), ('巩亚轩', '巩亚轩'), ('权怡凝', '权怡凝'), ('杨柠柽', '杨柠柽'), ('马冲', '马冲')], max_length=50, verbose_name='操作员')),
            ],
            options={
                'verbose_name': '证书信息',
                'verbose_name_plural': '证书信息',
            },
        ),
    ]
